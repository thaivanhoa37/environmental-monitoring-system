[
    {
        "id": "9ebc91553e1f5618",
        "type": "tab",
        "label": "Environmental Monitoring",
        "disabled": false,
        "info": "Flow giám sát môi trường với ESP32 và Firebase"
    },
    {
        "id": "fa3ed28ec445ce6d",
        "type": "group",
        "z": "9ebc91553e1f5618",
        "name": "Database Storage SQL",
        "style": {
            "label": true
        },
        "nodes": [
            "ec1f10017cb99d94",
            "6fde0c528ba2deed",
            "7a686796d8e2fc6c",
            "037ec3d60b7b4221",
            "c392ec045342451a",
            "a2ebe0859c2b9cb1",
            "ee4eaec821a7f6fb",
            "f05004150efcdb78"
        ],
        "x": 514,
        "y": 19,
        "w": 652,
        "h": 282
    },
    {
        "id": "9b288db22921debb",
        "type": "group",
        "z": "9ebc91553e1f5618",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "bea58589ece5a7bc",
            "83b85a8f613ee653",
            "10027674dac449c6",
            "baa3aefb68089308",
            "208121a2dfbfb50a",
            "d4433dc42012cf14",
            "bd3769e453455321",
            "91148bf00265b40f",
            "c5069adc62a5b50a",
            "fd5b11f6fc7239d0",
            "5393e22e80f096f3",
            "c338a111d0a34238",
            "52624ff6ec020749",
            "c0e237b903363ba2",
            "64388b22e7ac8f35",
            "2e8fa44ccef70a25",
            "0b5fa103c68c3e10",
            "25c7a8e17322b24c"
        ],
        "x": 54,
        "y": 19,
        "w": 452,
        "h": 622
    },
    {
        "id": "2130546fa05bd666",
        "type": "group",
        "z": "9ebc91553e1f5618",
        "name": "Web socket and MQTT Handler",
        "style": {
            "label": true
        },
        "nodes": [
            "2f206dbccdb8d40d",
            "868db8b61c035d5f",
            "3b186c910827e7e0",
            "62692082a78c95fe",
            "06eadb5101e0a5c8",
            "48bbbc082319ceb1",
            "32efceb760331107"
        ],
        "x": 54,
        "y": 639,
        "w": 1112,
        "h": 222
    },
    {
        "id": "dafd05e87c0cecc1",
        "type": "group",
        "z": "9ebc91553e1f5618",
        "name": "Firebase Integration",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "b9a2952276adcc7c",
            "d965608e4854df89",
            "54002b5f92d33780",
            "9b67a20ecc966dd5",
            "07ebd42315ced98f",
            "156fcaa80f399b18",
            "32a06c4ee03cb0a3",
            "63962291738db7bf",
            "d9749fb07fc85ae5"
        ],
        "x": 514,
        "y": 299,
        "w": 652,
        "h": 342
    },
    {
        "id": "bea58589ece5a7bc",
        "type": "mqtt in",
        "z": "9ebc91553e1f5618",
        "g": "9b288db22921debb",
        "name": "Humidity",
        "topic": "esp32/sensor/humidity",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "6df0540f12236ba5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 180,
        "wires": [
            [
                "91148bf00265b40f",
                "c0e237b903363ba2"
            ]
        ]
    },
    {
        "id": "83b85a8f613ee653",
        "type": "mqtt in",
        "z": "9ebc91553e1f5618",
        "g": "9b288db22921debb",
        "name": "Pressure",
        "topic": "esp32/sensor/pressure",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "6df0540f12236ba5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 280,
        "wires": [
            [
                "c5069adc62a5b50a",
                "64388b22e7ac8f35"
            ]
        ]
    },
    {
        "id": "10027674dac449c6",
        "type": "mqtt in",
        "z": "9ebc91553e1f5618",
        "g": "9b288db22921debb",
        "name": "CO2",
        "topic": "esp32/sensor/co2",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "6df0540f12236ba5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 170,
        "y": 380,
        "wires": [
            [
                "fd5b11f6fc7239d0",
                "2e8fa44ccef70a25"
            ]
        ]
    },
    {
        "id": "baa3aefb68089308",
        "type": "mqtt in",
        "z": "9ebc91553e1f5618",
        "g": "9b288db22921debb",
        "name": "Dust",
        "topic": "esp32/sensor/dust",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "6df0540f12236ba5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 170,
        "y": 480,
        "wires": [
            [
                "5393e22e80f096f3",
                "0b5fa103c68c3e10"
            ]
        ]
    },
    {
        "id": "208121a2dfbfb50a",
        "type": "mqtt in",
        "z": "9ebc91553e1f5618",
        "g": "9b288db22921debb",
        "name": "AQI",
        "topic": "esp32/sensor/aqi",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "6df0540f12236ba5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 170,
        "y": 580,
        "wires": [
            [
                "c338a111d0a34238",
                "25c7a8e17322b24c"
            ]
        ]
    },
    {
        "id": "d4433dc42012cf14",
        "type": "mqtt in",
        "z": "9ebc91553e1f5618",
        "g": "9b288db22921debb",
        "name": "Temperature",
        "topic": "esp32/sensor/temperature",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "6df0540f12236ba5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 80,
        "wires": [
            [
                "bd3769e453455321",
                "52624ff6ec020749"
            ]
        ]
    },
    {
        "id": "bd3769e453455321",
        "type": "ui_gauge",
        "z": "9ebc91553e1f5618",
        "g": "9b288db22921debb",
        "name": "Temperature Gauge",
        "group": "5aec396a7f817308",
        "order": 1,
        "width": "8",
        "height": "5",
        "gtype": "donut",
        "title": "Temperature",
        "label": "°C",
        "format": "{{value | number:1}}",
        "min": 0,
        "max": "50",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "25",
        "seg2": "35",
        "diff": false,
        "className": "",
        "x": 380,
        "y": 60,
        "wires": []
    },
    {
        "id": "91148bf00265b40f",
        "type": "ui_gauge",
        "z": "9ebc91553e1f5618",
        "g": "9b288db22921debb",
        "name": "Humidity Gauge",
        "group": "5aec396a7f817308",
        "order": 2,
        "width": "8",
        "height": "5",
        "gtype": "donut",
        "title": "Humidity",
        "label": "%",
        "format": "{{value | number:1}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#ca3838",
            "#00b500",
            "#ca3838"
        ],
        "seg1": "30",
        "seg2": "70",
        "diff": false,
        "className": "",
        "x": 360,
        "y": 160,
        "wires": []
    },
    {
        "id": "c5069adc62a5b50a",
        "type": "ui_gauge",
        "z": "9ebc91553e1f5618",
        "g": "9b288db22921debb",
        "name": "Pressure Gauge",
        "group": "5aec396a7f817308",
        "order": 3,
        "width": "8",
        "height": "5",
        "gtype": "donut",
        "title": "Pressure",
        "label": "hPa",
        "format": "{{value | number:1}}",
        "min": "900",
        "max": "1100",
        "colors": [
            "#ca3838",
            "#00b500",
            "#ca3838"
        ],
        "seg1": "980",
        "seg2": "1020",
        "diff": false,
        "className": "",
        "x": 360,
        "y": 260,
        "wires": []
    },
    {
        "id": "fd5b11f6fc7239d0",
        "type": "ui_gauge",
        "z": "9ebc91553e1f5618",
        "g": "9b288db22921debb",
        "name": "CO2 Gauge",
        "group": "94f03bc6e0320edd",
        "order": 1,
        "width": "8",
        "height": "5",
        "gtype": "donut",
        "title": "CO2",
        "label": "ppm",
        "format": "{{value | number:0}}",
        "min": "400",
        "max": "5000",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "800",
        "seg2": "1200",
        "diff": false,
        "className": "",
        "x": 350,
        "y": 360,
        "wires": []
    },
    {
        "id": "5393e22e80f096f3",
        "type": "ui_gauge",
        "z": "9ebc91553e1f5618",
        "g": "9b288db22921debb",
        "name": "Dust Gauge",
        "group": "94f03bc6e0320edd",
        "order": 2,
        "width": "8",
        "height": "5",
        "gtype": "donut",
        "title": "Dust",
        "label": "μg/m³",
        "format": "{{value | number:1}}",
        "min": 0,
        "max": "500",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "35.4",
        "seg2": "150.4",
        "diff": false,
        "className": "",
        "x": 350,
        "y": 460,
        "wires": []
    },
    {
        "id": "c338a111d0a34238",
        "type": "ui_gauge",
        "z": "9ebc91553e1f5618",
        "g": "9b288db22921debb",
        "name": "AQI Gauge",
        "group": "94f03bc6e0320edd",
        "order": 3,
        "width": "8",
        "height": "5",
        "gtype": "donut",
        "title": "AQI",
        "label": "",
        "format": "{{value}}",
        "min": 0,
        "max": "500",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "100",
        "seg2": "200",
        "diff": false,
        "className": "",
        "x": 350,
        "y": 560,
        "wires": []
    },
    {
        "id": "52624ff6ec020749",
        "type": "ui_chart",
        "z": "9ebc91553e1f5618",
        "g": "9b288db22921debb",
        "name": "Temperature History",
        "group": "4cfb1c5353984686",
        "order": 1,
        "width": "12",
        "height": "7",
        "label": "Temperature",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "3600",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 380,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "c0e237b903363ba2",
        "type": "ui_chart",
        "z": "9ebc91553e1f5618",
        "g": "9b288db22921debb",
        "name": "Humidity History",
        "group": "4cfb1c5353984686",
        "order": 2,
        "width": "12",
        "height": "7",
        "label": "Humidity",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "3600",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#2ca02c"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 360,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "64388b22e7ac8f35",
        "type": "ui_chart",
        "z": "9ebc91553e1f5618",
        "g": "9b288db22921debb",
        "name": "Pressure History",
        "group": "3302b0f6c88da3e5",
        "order": 1,
        "width": "12",
        "height": "7",
        "label": "Pressure",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "3600",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ff7f0e"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 360,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "2e8fa44ccef70a25",
        "type": "ui_chart",
        "z": "9ebc91553e1f5618",
        "g": "9b288db22921debb",
        "name": "CO2 History",
        "group": "3302b0f6c88da3e5",
        "order": 2,
        "width": "12",
        "height": "7",
        "label": "CO2",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "3600",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#d62728"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 350,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "0b5fa103c68c3e10",
        "type": "ui_chart",
        "z": "9ebc91553e1f5618",
        "g": "9b288db22921debb",
        "name": "Dust History",
        "group": "68e8d7ac28844c49",
        "order": 1,
        "width": "12",
        "height": "7",
        "label": "Dust",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "3600",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#9467bd"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 350,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "25c7a8e17322b24c",
        "type": "ui_chart",
        "z": "9ebc91553e1f5618",
        "g": "9b288db22921debb",
        "name": "AQI History",
        "group": "68e8d7ac28844c49",
        "order": 2,
        "width": "12",
        "height": "7",
        "label": "AQI",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "3600",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#8c564b"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 350,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "ec1f10017cb99d94",
        "type": "function",
        "z": "9ebc91553e1f5618",
        "g": "fa3ed28ec445ce6d",
        "name": "Format MySQL Data",
        "func": "let sensor = context.get('sensor') || {};\n\nswitch (msg.topic) {\n    case 'esp32/sensor/temperature':\n        sensor.temperature = parseFloat(msg.payload);\n        break;\n    case 'esp32/sensor/humidity':\n        sensor.humidity = parseFloat(msg.payload);\n        break;\n    case 'esp32/sensor/pressure':\n        sensor.pressure = parseFloat(msg.payload);\n        break;\n    case 'esp32/sensor/co2':\n        sensor.co2 = parseFloat(msg.payload);\n        break;\n    case 'esp32/sensor/dust':\n        sensor.dust = parseFloat(msg.payload);\n        break;\n    case 'esp32/sensor/aqi':\n        sensor.aqi = parseFloat(msg.payload);\n        break;\n}\n\ncontext.set('sensor', sensor);\n\n// Check if we have all sensor readings\nif (sensor.temperature !== undefined &&\n    sensor.humidity !== undefined &&\n    sensor.pressure !== undefined &&\n    sensor.co2 !== undefined &&\n    sensor.dust !== undefined &&\n    sensor.aqi !== undefined) {\n    \n    let now = new Date();\n    now.setHours(now.getHours() + 7); // Vietnam timezone\n    let timestamp = now.toISOString().slice(0, 19).replace('T', ' ');\n    \n    msg.topic = `INSERT INTO sensor_data (temperature, humidity, pressure, co2, dust, aqi, timestamp) VALUES (${sensor.temperature}, ${sensor.humidity}, ${sensor.pressure}, ${sensor.co2}, ${sensor.dust}, ${sensor.aqi}, '${timestamp}')`;\n    \n    // Reset sensor data after storing\n    context.set('sensor', {});\n    return msg;\n}\n\nreturn null;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 160,
        "wires": [
            [
                "6fde0c528ba2deed"
            ]
        ]
    },
    {
        "id": "6fde0c528ba2deed",
        "type": "mysql",
        "z": "9ebc91553e1f5618",
        "g": "fa3ed28ec445ce6d",
        "mydb": "c08db5e37956216c",
        "name": "MySQL Storage",
        "x": 1060,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "7a686796d8e2fc6c",
        "type": "mqtt in",
        "z": "9ebc91553e1f5618",
        "g": "fa3ed28ec445ce6d",
        "name": "Humidity",
        "topic": "esp32/sensor/humidity",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "6df0540f12236ba5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 620,
        "y": 100,
        "wires": [
            [
                "ec1f10017cb99d94"
            ]
        ]
    },
    {
        "id": "037ec3d60b7b4221",
        "type": "mqtt in",
        "z": "9ebc91553e1f5618",
        "g": "fa3ed28ec445ce6d",
        "name": "Pressure",
        "topic": "esp32/sensor/pressure",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "6df0540f12236ba5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 620,
        "y": 140,
        "wires": [
            [
                "ec1f10017cb99d94"
            ]
        ]
    },
    {
        "id": "c392ec045342451a",
        "type": "mqtt in",
        "z": "9ebc91553e1f5618",
        "g": "fa3ed28ec445ce6d",
        "name": "CO2",
        "topic": "esp32/sensor/co2",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "6df0540f12236ba5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 630,
        "y": 180,
        "wires": [
            [
                "ec1f10017cb99d94"
            ]
        ]
    },
    {
        "id": "a2ebe0859c2b9cb1",
        "type": "mqtt in",
        "z": "9ebc91553e1f5618",
        "g": "fa3ed28ec445ce6d",
        "name": "Dust",
        "topic": "esp32/sensor/dust",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "6df0540f12236ba5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 630,
        "y": 220,
        "wires": [
            [
                "ec1f10017cb99d94"
            ]
        ]
    },
    {
        "id": "ee4eaec821a7f6fb",
        "type": "mqtt in",
        "z": "9ebc91553e1f5618",
        "g": "fa3ed28ec445ce6d",
        "name": "AQI",
        "topic": "esp32/sensor/aqi",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "6df0540f12236ba5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 630,
        "y": 260,
        "wires": [
            [
                "ec1f10017cb99d94"
            ]
        ]
    },
    {
        "id": "f05004150efcdb78",
        "type": "mqtt in",
        "z": "9ebc91553e1f5618",
        "g": "fa3ed28ec445ce6d",
        "name": "Temperature",
        "topic": "esp32/sensor/temperature",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "6df0540f12236ba5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 610,
        "y": 60,
        "wires": [
            [
                "ec1f10017cb99d94"
            ]
        ]
    },
    {
        "id": "2f206dbccdb8d40d",
        "type": "websocket in",
        "z": "9ebc91553e1f5618",
        "g": "2130546fa05bd666",
        "name": "WebSocket In",
        "server": "f5494776a418eb99",
        "client": "",
        "x": 150,
        "y": 680,
        "wires": [
            [
                "868db8b61c035d5f"
            ]
        ]
    },
    {
        "id": "868db8b61c035d5f",
        "type": "function",
        "z": "9ebc91553e1f5618",
        "g": "2130546fa05bd666",
        "name": "Format MQTT Command",
        "func": "try {\n    const data = JSON.parse(msg.payload);\n    \n    if (!data.type || !data.state) return null;\n    \n    return {\n        topic: `esp32/${data.type}/set`,\n        payload: data.state,\n        retain: false\n    };\n} catch (e) {\n    node.error(e);\n    return null;\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 680,
        "wires": [
            [
                "3b186c910827e7e0",
                "62692082a78c95fe"
            ]
        ]
    },
    {
        "id": "3b186c910827e7e0",
        "type": "mqtt out",
        "z": "9ebc91553e1f5618",
        "g": "2130546fa05bd666",
        "name": "To ESP32",
        "topic": "",
        "qos": "1",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "6df0540f12236ba5",
        "x": 1060,
        "y": 680,
        "wires": []
    },
    {
        "id": "62692082a78c95fe",
        "type": "debug",
        "z": "9ebc91553e1f5618",
        "g": "2130546fa05bd666",
        "name": "Debug",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 740,
        "wires": []
    },
    {
        "id": "06eadb5101e0a5c8",
        "type": "mqtt in",
        "z": "9ebc91553e1f5618",
        "g": "2130546fa05bd666",
        "name": "ESP32 States",
        "topic": "esp32/+/state",
        "qos": "1",
        "datatype": "auto",
        "broker": "6df0540f12236ba5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 820,
        "wires": [
            [
                "48bbbc082319ceb1"
            ]
        ]
    },
    {
        "id": "48bbbc082319ceb1",
        "type": "function",
        "z": "9ebc91553e1f5618",
        "g": "2130546fa05bd666",
        "name": "Format State Update",
        "func": "const device = msg.topic.split('/')[1];\n\nreturn {\n    payload: {\n        type: device,\n        state: msg.payload\n    }\n};",
        "outputs": 1,
        "x": 380,
        "y": 820,
        "wires": [
            [
                "32efceb760331107"
            ]
        ]
    },
    {
        "id": "32efceb760331107",
        "type": "websocket out",
        "z": "9ebc91553e1f5618",
        "g": "2130546fa05bd666",
        "name": "WebSocket Out",
        "server": "f5494776a418eb99",
        "client": "",
        "x": 1060,
        "y": 820,
        "wires": []
    },
    {
        "id": "b9a2952276adcc7c",
        "type": "mqtt in",
        "z": "9ebc91553e1f5618",
        "g": "dafd05e87c0cecc1",
        "name": "Humidity",
        "topic": "esp32/sensor/humidity",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "6df0540f12236ba5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 600,
        "y": 400,
        "wires": [
            [
                "63962291738db7bf"
            ]
        ]
    },
    {
        "id": "d965608e4854df89",
        "type": "mqtt in",
        "z": "9ebc91553e1f5618",
        "g": "dafd05e87c0cecc1",
        "name": "Pressure",
        "topic": "esp32/sensor/pressure",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "6df0540f12236ba5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 600,
        "y": 460,
        "wires": [
            [
                "63962291738db7bf"
            ]
        ]
    },
    {
        "id": "54002b5f92d33780",
        "type": "mqtt in",
        "z": "9ebc91553e1f5618",
        "g": "dafd05e87c0cecc1",
        "name": "CO2",
        "topic": "esp32/sensor/co2",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "6df0540f12236ba5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 590,
        "y": 520,
        "wires": [
            [
                "63962291738db7bf"
            ]
        ]
    },
    {
        "id": "9b67a20ecc966dd5",
        "type": "mqtt in",
        "z": "9ebc91553e1f5618",
        "g": "dafd05e87c0cecc1",
        "name": "Dust",
        "topic": "esp32/sensor/dust",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "6df0540f12236ba5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 590,
        "y": 580,
        "wires": [
            [
                "63962291738db7bf"
            ]
        ]
    },
    {
        "id": "07ebd42315ced98f",
        "type": "mqtt in",
        "z": "9ebc91553e1f5618",
        "g": "dafd05e87c0cecc1",
        "name": "AQI",
        "topic": "esp32/sensor/aqi",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "6df0540f12236ba5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 730,
        "y": 600,
        "wires": [
            [
                "63962291738db7bf"
            ]
        ]
    },
    {
        "id": "156fcaa80f399b18",
        "type": "mqtt in",
        "z": "9ebc91553e1f5618",
        "g": "dafd05e87c0cecc1",
        "name": "Temperature",
        "topic": "esp32/sensor/temperature",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "6df0540f12236ba5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 610,
        "y": 340,
        "wires": [
            [
                "63962291738db7bf"
            ]
        ]
    },
    {
        "id": "32a06c4ee03cb0a3",
        "type": "firebase-out",
        "z": "9ebc91553e1f5618",
        "g": "dafd05e87c0cecc1",
        "name": "Save to Firebase",
        "database": "4cc9225acd81a250",
        "path": "env_data",
        "pathType": "str",
        "priority": "0",
        "queryType": "update",
        "x": 1050,
        "y": 400,
        "wires": []
    },
    {
        "id": "63962291738db7bf",
        "type": "function",
        "z": "9ebc91553e1f5618",
        "g": "dafd05e87c0cecc1",
        "name": "Format Firebase Data",
        "func": "try {\n    // Parse value to number\n    let value = parseFloat(msg.payload);\n    if (isNaN(value)) {\n        node.error('Invalid sensor value');\n        return null;\n    }\n\n    // Round to 2 decimal places\n    value = Math.round(value * 100) / 100;\n\n    // Get sensor name from topic\n    const sensorType = msg.topic.split('/').pop();\n\n    // Create update payload\n    msg.payload = {\n        [`sensors/${sensorType}`]: value\n    };\n\n    node.log(`Storing ${sensorType}: ${value}`);\n    return msg;\n    \n} catch (error) {\n    node.error('Error processing sensor data: ' + error.message);\n    return null;\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 400,
        "wires": [
            [
                "32a06c4ee03cb0a3",
                "d9749fb07fc85ae5"
            ]
        ]
    },
    {
        "id": "d9749fb07fc85ae5",
        "type": "debug",
        "z": "9ebc91553e1f5618",
        "g": "dafd05e87c0cecc1",
        "name": "Debug Firebase Data",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 540,
        "wires": []
    },
    {
        "id": "6df0540f12236ba5",
        "type": "mqtt-broker",
        "name": "MQTT Broker",
        "broker": "192.168.137.127",
        "port": "1883",
        "clientid": "node-red-client",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "5aec396a7f817308",
        "type": "ui_group",
        "name": "Environmental Sensors",
        "tab": "environment_tab",
        "order": 1,
        "disp": true,
        "width": "24",
        "collapse": false,
        "className": ""
    },
    {
        "id": "94f03bc6e0320edd",
        "type": "ui_group",
        "name": "Air Quality Sensors",
        "tab": "environment_tab",
        "order": 2,
        "disp": true,
        "width": "24",
        "collapse": false,
        "className": ""
    },
    {
        "id": "4cfb1c5353984686",
        "type": "ui_group",
        "name": "Temperature & Humidity History",
        "tab": "environment_tab",
        "order": 3,
        "disp": true,
        "width": "24",
        "collapse": false,
        "className": ""
    },
    {
        "id": "3302b0f6c88da3e5",
        "type": "ui_group",
        "name": "Pressure & CO2 History",
        "tab": "environment_tab",
        "order": 4,
        "disp": true,
        "width": "24",
        "collapse": false,
        "className": ""
    },
    {
        "id": "68e8d7ac28844c49",
        "type": "ui_group",
        "name": "Dust & AQI History",
        "tab": "environment_tab",
        "order": 5,
        "disp": true,
        "width": "24",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c08db5e37956216c",
        "type": "MySQLdatabase",
        "name": "Environment DB",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "environmental_monitoring_system",
        "tz": "Asia/Ho_Chi_Minh",
        "charset": "UTF8"
    },
    {
        "id": "f5494776a418eb99",
        "type": "websocket-listener",
        "path": "/ws/node/state",
        "wholemsg": "false"
    },
    {
        "id": "4cc9225acd81a250",
        "type": "firebase-config",
        "name": "My Database",
        "authType": "privateKey",
        "claims": {},
        "createUser": false,
        "status": {
            "firestore": true,
            "storage": false
        },
        "useClaims": false
    },
    {
        "id": "environment_tab",
        "type": "ui_tab",
        "name": "Environmental Monitor",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    }
]